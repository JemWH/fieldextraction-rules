morphlines : [
  {
    id : morphlines_paloalto_threat
    importCommands : ["org.kitesdk.**"]

    commands : [
#      #{ logInfo { format : "input record paloalto: {}", args : ["@{}"] } }

      ## Detect what type of Palo Alto log we are dealing with, usually in the 3rd or 4th field (TRAFFIC, THREAT, etc.)
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString:  """
            PANDATE %{YEAR}[/-]%{MONTHNUM}[/-]%{MONTHDAY} %{TIME}
            PALOALTO_THREAT %{INT},%{PANDATE},%{DATA},(?:THREAT),%{DATA},%{DATA},%{PANDATE},%{GREEDYDATA}
          """
          expressions : {
            message : """.*%{PALOALTO_THREAT:paloalto_threat}"""
          }
        }
      }
      ### Documented here: https://www.paloaltonetworks.com/documentation/81/pan-os/pan-os/monitoring/use-syslog-for-monitoring/syslog-field-descriptions/threat-log-fields
      ## Split CSV and set the field
      {
        split {
          inputField : paloalto_threat
          outputFields : [ FUTURE_USE0,receive_time_ts, serial, type, subtype, FUTURE_USE1, time_generated_ts,src,dst,natsrc,natdst,rule,srcuser,dstuser,app,vsys,from,to,inbound_if,outbound_if,logset,FUTURE_USE2,sessionid,repeatcnt_i,src_port,dst_port,natsrc_port,natdst_port,flags,protocol,action, misc, threatid, threat_category, threat_severity, direction, seqno_i, actionflags, srcloc, dstloc, FUTURE_USE3, subtype ]
          separator : ","
          isRegex : false
          addEmptyStrings : true
          trim : true
          limit: -1
        }
      }


      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:paloalto_threat", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }

      ## Add the Headers to set vendor and subtype
      {
        setValues {
          HEADER_vendor: "Palo Alto Networks"
          HEADER_devicetype: "Firewall"
          HEADER_devicemodel: "PA Series"
        }
      }

    ]
  }
]
